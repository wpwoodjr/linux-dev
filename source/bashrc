
### linux-dev ###

# set up aliases
alias set-proxy="source /usr/local/bin/set-proxy.sh"
alias no-proxy="source /usr/local/bin/no-proxy.sh"
alias update-tools="install-tools upgrade"

if [ -z "$LINUX_DEV_INITIALIZED" ]
then
  export LINUX_DEV_INITIALIZED=1

  # set locale
  source /etc/default/locale && export LANG

  # do one-time initializations
  [ -f "$HOME/init" ] && source "$HOME/init" && rm "$HOME/init"

  # print help text
  cat "$HOME/help.txt"

  # configure kubeconfig
  if [ ! -z "$kubeconfig" ]
  then
    if [ ! -f "$kubeconfig" ]; then echo "Kubeconfig file not found: $kubeconfig"
    elif [ "$kubeconfig" -nt "$HOME/.kube/config" ]; then merge-kubeconfig "$kubeconfig"
    else echo "Kubeconfig file \"$kubeconfig\" isn't newer than \"$HOME/.kube/config\", not merged"
    fi
    unset kubeconfig
  fi

  # configure proxies
  [ -z "$user$passwd" ] && no-proxy && echo "To set proxy, run: set-proxy USERNAME [PASSWORD]"
  [ ! -z "$user$passwd" ] && set-proxy "$user" "$passwd" && unset user passwd

  # configure krew
  export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

  # show mounted directory
  cd "$HOME/$(basename $HOST_DIR)"
  echo Host directory \"$HOST_DIR\" mounted at \"$(pwd)\"

  # convert username in prompt to lower case
  # PS1="$(sed <<<$PS1 -e s/\\u/$(echo $(id -u -n) | tr [:upper:] [:lower:])/g)"

  # try to ensure that docker is group owner of /var/run/docker.sock
  [ -S "/var/run/docker.sock" ] && [ -n "$(getent group docker)" ] && \
    docker_group="$(stat -c %G /var/run/docker.sock)" && \
    if [ "$docker_group" = "root" ]; then
      echo "changing group ownership of /var/run/docker.sock from root to docker..."
      sudo chgrp docker "/var/run/docker.sock" && sudo chmod g+rw "/var/run/docker.sock"
    elif [ "$docker_group" = "UNKNOWN" ]; then
      docker_group_id="$(stat -c %g /var/run/docker.sock)"
      echo "changing docker group id to $docker_group_id, same as group owner of /var/run/docker.sock..."
      sudo groupmod -g "$docker_group_id" docker
    elif [ "$docker_group" != "docker" ]; then
      echo "group owner of /var/run/docker.sock is $docker_group; sudo will be required to use docker"
    fi
fi
